spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=pass
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true

#######################"""Eureka Discovery/Registry Server#######
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
server.port=8084
spring.application.name=order-service

eureka.instance.prefer-ip-address=true
eureka.instance.hostname=localhost
eureka.instance.instance-id=${spring.application.name}:${server.port}
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
spring.cloud.discovery.enabled=true


#spring actuator
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#spring resiliance4j properties => stats of microservices
resilience4j.circuitbreaker.instances.inventory1.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory1.event-consomer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory1.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory1.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory1.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory1.wiatDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory1.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory1.automaticTransitionFromOpenToHalfOpenEnabled=true

#resilience4j Time out properties #######################
resilience4j.timeLimiter.instances.inventory1.timeout-duration=3s

#Resilience4j Retry mechanism properties#######################
resilience4j.retry.instances.inventory1.max-attempts=3
resilience4j.retry.instances.inventory1.wait-duration=5s


#Micrometre for tracing distributed microservices
management.tracing.sampling.probability=0.1
logging.pattern.level='%5p [${spring.application.name}, %X{traceId}:-}, %X{spanId:-}]'


#KAFKA properties###############################
#spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.bootstrap-servers=localhost:29092

spring.kafka.template.default-topic=notificationOrderTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.mbtechnos.orderservice.event.PlaceOrderEvent


